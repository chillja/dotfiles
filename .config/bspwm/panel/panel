#!/bin/bash
#ads terminal colorscheme
. panel_colors

PANEL_FONT_FAMILY="-benis-lemon-medium-r-normal--10-110-75-75-m-50-ISO8859-1"

panel_cmd="bar -g x20 -B#$BLACK -F#$WHITE -f $PANEL_FONT_FAMILY"

arlefreak_widget() {
    local arlefreak
    arlefreak="%{B#$MAGENTA1} ⮗rlefreak ⮮ %{B-}"
    echo "arlefreak:$arlefreak"
}

desktops_widget() {
  local line bspwm_status desktops field

  bspc control --subscribe | while read -r line; do
    bspwm_status=(${line//:/ })
    desktops=''

    for field in "${bspwm_status[@]}"; do
      case $field in
        O*|U*|F*)
          desktops+="%{B#$BLUE1} ${field#?} %{B-}"
          ;;
        o*|u*)
          desktops+="%{F#$BLUE2} ${field#?} %{F-}"
          ;;
        f*)
          desktops+="%{F#$WHITE} ${field#?} %{F-}"
          ;;
      esac
    done

    echo "desktops:$desktops"
  done
}

title_widget() {
  local line id title

  xprop -spy -root ':$0\n' _NET_ACTIVE_WINDOW | while read -r line; do
    id="${line#*:}"
    title="$(xprop -id $id _NET_WM_NAME 2>/dev/null)"

    if [[ "$title" ]]; then
      title="${title#*\"}"
      title="${title%?}"
      title="%{F#$GREEN1}$title%{F-}"
    fi

    echo "title:$title"
  done
}

clock_widget() {
  local clock="$(date '+%H:%M')"
  echo "clock:%{F#$YELLOW1}$clock%{F-}"
}

date_widget() {
  local date="$(date '+%A %d %B')"

  echo "date:%{F#$YELLOW2}${date,,}%{F-}"
}

volume_widget(){
  local vol="$(amixer get Master | egrep -o "[0-9]+%")"
  echo "volume:%{F#$MAGENTA1}$vol"
}

network_widget() {
    read lo int1 int2 <<< `ip link | sed -n 's/^[0-9]: \(.*\):.*$/\1/p'`
    if iwconfig $int1 >/dev/null 2>&1; then
        wifi=$int1
        eth0=$int2
    else
        wifi=$int2
        eth0=$int1
    fi
    ip link show $eth0 | grep 'state UP' >/dev/null && int=$eth0 ||int=$wifi

    #int=eth0

    ping -c 1 8.8.8.8 >/dev/null 2>&1 &&
        echo "network: %{F#$GREEN1}$int connected%{F-}" || echo "network: %{F#$RED}$int disconnected%{F-}"
}

mem_widget() {
  read t f <<< `grep -E 'Mem(Total|Free)' /proc/meminfo |awk '{print $2}'`
    local MEM=$(bc <<< "scale=2; 100 - $f / $t * 100" | cut -d. -f1)
  echo "memory:%{F#$CYAN1}$MEM%{F-}"
}

cpu_widget() {
    LINE=`ps -eo pcpu |grep -vE '^\s*(0.0|%CPU)' |sed -n '1h;$!H;$g;s/\n/ +/gp'`
    local CPU=$(bc <<< $LINE)
    echo "cpu:%{F#$MAGENTA1}$CPU%{F-}"
}

nowplaying_widget() {
    cur=`mpc current`
    # this line allow to choose whether the output will scroll or not
    test "$1" = "scroll" && PARSER='skroll -n20 -d0.5 -r' || PARSER='cat'
    #test -n "$cur" && $PARSER <<< $cur || echo "- stopped -"
    local SONG=$(test -n "$cur" && $PARSER <<< $cur || echo "- stopped -")
    echo "nowPlaying:%{F#$YELLOW1}$SONG%{F-}"
}

widgets_format() {
  local arlefreak desktops title volume mem cpu network clock date nowPlaying
  local fmt line
  local separator="%{F#$WHITE} | %{B-}"

  while read -r line; do
    case $line in
      arlefreak*)  arlefreak="${line#*:}" ;;
      desktops*)   desktops="${line#*:}" ;;
      title*)      title="${line#*:}" ;;
      volume*)     volume="${line#*:}" ;;
      memory*)     memory="${line#*:}" ;;
      cpu*)        cpu="${line#*:}" ;;
      network*)    network="${line#*:}" ;;
      clock*)      clock="${line#*:}" ;;
      date*)       date="${line#*:}" ;;
      nowPlaying*) nowPlaying="${line#*:}" ;;
    esac

    fmt="%{l} $arlefreak $separator "
    fmt+="$desktops $separator "
    fmt+="$title"
    fmt+="%{r} ⮞ $volume%% $separator"
    fmt+="⮡ $memory%% $separator"
    fmt+="⮦ $cpu%% $separator"
    fmt+="⮷ $network $separator"
    fmt+="⮖ $clock - $date $separator"
    fmt+="⮕ $nowPlaying   "

    echo "$fmt"
  done
}

# main
{
  desktops_widget &
  title_widget &
  arlefreak_widget &

  while true; do
    volume_widget
    mem_widget
    cpu_widget
    network_widget
    clock_widget
    date_widget
    nowplaying_widget
    sleep 1
  done &

  while true; do
    sleep 1h
  done &
} | widgets_format | $panel_cmd &

wait

